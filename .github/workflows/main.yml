name: Kernel Build (alioth) - clang-r536225

on:
  workflow_dispatch:
    inputs:
      BUILD_TITLE:
        description: 'Custom Build Title'
        required: false
      KERNEL_TREE:
        description: 'Kernel Tree'
        default: 'https://github.com/averagePedestrian/n0kernel'
        required: true
      KERNEL_TREE_BRANCH:
        description: 'Kernel Tree Branch'
        required: true
        default: 'staging'
      CODENAME:
        description: 'Phone Codename'
        default: 'alioth'
        required: true
      ANYKERNEL_URL:
        description: 'AnyKernel Url (leave blank if you dont want AnyKernel)'
        default: 'https://github.com/itisFarzin-Phone/AnyKernel3'
        required: false
      ANYKERNEL_BRANCH:
        description: 'AnyKernel Branch (defaults to codename)'
        default: 'alioth'
        required: false
      CLANG_GIT_LINK:
        description: 'Clang Git URL'
        default: 'https://android.googlesource.com/platform/prebuilts/clang/host/linux-x86/+archive/refs/heads/main/clang-r536225'
        required: false
      SEND_NOTIFICATION:
        description: 'Send Notification'
        type: boolean
        default: false
      ENABLE_KERNELSU:
        description: 'KernelSU'
        type: boolean
        default: true
      UPLOAD_TO_RELEASE:
        description: 'Upload to release'
        type: boolean
        default: true

jobs:
  build:
    if: github.event.repository.owner.id == github.event.sender.id
    runs-on: ubuntu-22.04
    permissions:
      contents: write
    steps:
    
    - name: Display User Inputs
      run: |
        echo "::group::User Environment Variables"
        echo "Custom Build Title: ${{ github.event.inputs.BUILD_TITLE }}"
        echo "Kernel Tree: ${{ github.event.inputs.KERNEL_TREE }}/tree/${{ github.event.inputs.KERNEL_TREE_BRANCH }}"
        echo "Codename: ${{ github.event.inputs.CODENAME }}"
        echo "AnyKernel Url: ${{ github.event.inputs.ANYKERNEL_URL }}/tree/${{ github.event.inputs.ANYKERNEL_BRANCH }}"
        echo "Send Notification: ${{ fromJSON('["No", "Yes"]')[fromJSON(github.event.inputs.ENABLE_KERNELSU)] }}
        echo "KernelSU: ${{ fromJSON('["No", "Yes"]')[fromJSON(github.event.inputs.ENABLE_KERNELSU)] }}
        echo "::endgroup::"

    - name: Initialize workspace
      run: |
        mkdir workspace
        cd workspace
        echo "workspace-folder=$(pwd)" >> $GITHUB_OUTPUT
        echo "start_time=$(date +%s)" >> $GITHUB_OUTPUT
        echo "kernelsu=${{ fromJSON('["No", "Yes"]')[fromJSON(github.event.inputs.ENABLE_KERNELSU)] }}" >> $GITHUB_OUTPUT
        echo "build_title=${{ github.event.inputs.BUILD_TITLE || github.event.inputs.CODENAME }}" >> $GITHUB_OUTPUT
      id: workspace

    - name: Prepare the build environment
      run: |
        sudo apt-get install flex libncurses5
        git clone https://android.googlesource.com/platform/prebuilts/gcc/linux-x86/aarch64/aarch64-linux-android-4.9 -b android-msm-redbull-4.19-android14 --depth=1
        git clone https://android.googlesource.com/platform/prebuilts/gcc/linux-x86/arm/arm-linux-androideabi-4.9 -b android-msm-redbull-4.19-android14 --depth=1
        wget https://android.googlesource.com/platform/prebuilts/clang/host/linux-x86/+archive/refs/heads/main/clang-r536225.tar.gz -O clang.tar.gz
        mkdir clang
        tar -xf clang.tar.gz -C clang
        echo "tools-folder=$(pwd)" >> $GITHUB_OUTPUT
      working-directory: ${{ steps.workspace.outputs.workspace-folder }}
      id: tools

    - name: Clone kernel source
      run: |
        git clone --depth=1 ${{ github.event.inputs.KERNEL_TREE }} -b ${{ github.event.inputs.KERNEL_TREE_BRANCH }} kernel_tree
        echo "kernel-folder=$(pwd)/kernel_tree" >> $GITHUB_OUTPUT
      working-directory: ${{ steps.workspace.outputs.workspace-folder }}
      id: kernel

    - name: Adding KernelSU
      if: ${{ steps.workspace.outputs.kernelsu == 'Yes' }}
      run: |
        if [ -d "KernelSU" ]; then
          curl -LSs "https://gist.githubusercontent.com/averagePedestrian/453b70ad72e51e669a7b03ac799c32ca/raw/962b9181f3ebe5e9f52470b1c6c37e5542cd7518/setup.sh" | bash -s -- --cleanup
        fi
        curl -LSs "https://gist.githubusercontent.com/averagePedestrian/453b70ad72e51e669a7b03ac799c32ca/raw/962b9181f3ebe5e9f52470b1c6c37e5542cd7518/setup.sh" | bash -s legacy
      working-directory: ${{ steps.kernel.outputs.kernel-folder }}

    - name: Building kernel
      run: |
        git submodule init && git submodule update
        export ARCH=arm64
        export SUBARCH=ARM64
        export KBUILD_BUILD_USER="nehal"
        export KBUILD_BUILD_HOST="Github"
        make O=out vendor/alioth_defconfig PATH="${{ steps.tools.outputs.tools-folder }}/clang/bin:$PATH"
        make O=out CC=clang -j$(nproc --all) PATH="${{ steps.tools.outputs.tools-folder }}/clang/bin:$PATH" CROSS_COMPILE=aarch64-linux-gnu- LLVM=1 LLVM_IAS=1
        echo "elapsed_time=$(echo "$(date +%s)"-"${{ steps.workspace.outputs.start_time }}" | bc)" >> $GITHUB_OUTPUT
      working-directory: ${{ steps.kernel.outputs.kernel-folder }}
      id: build

    - name: AnyKernel3
      if: ${{ success() && github.event.inputs.ANYKERNEL_URL != '' }}
      continue-on-error: true
      run: |

        if [ ! -d "AnyKernel3" ]; then
          if [[ -z "${{ github.event.inputs.ANYKERNEL_BRANCH }}" ]]; then
            anykernel_branch=${{ github.event.inputs.CODENAME }}
          else
            anykernel_branch=${{ github.event.inputs.ANYKERNEL_BRANCH }}
          fi
          git clone --recursive --depth=1 ${{ github.event.inputs.ANYKERNEL_URL }} -b $anykernel_branch AnyKernel3
        fi
        if [ -f out/arch/arm64/boot/Image.gz-dtb ]; then
          cp -f out/arch/arm64/boot/Image.gz-dtb AnyKernel3/ -rv
          test -f out/arch/arm64/boot/dtbo.img && cp -v out/arch/arm64/boot/dtbo.img AnyKernel3/
        elif [ -f out/arch/arm64/boot/Image.gz]; then
          cp -f out/arch/arm64/boot/Image.gz AnyKernel3
          test -f out/arch/arm64/boot/dtbo.img && cp -v out/arch/arm64/boot/dtbo.img AnyKernel3/
          test -f out/arch/arm64/boot/dtb && cp -v out/arch/arm64/boot/dtb AnyKernel3/
        fi
        name=n0kernel-${{ fromJSON('["", "KSU"]')[fromJSON(github.event.inputs.ENABLE_KERNELSU)] }}.zip
        cd AnyKernel3
        zip -r9 $name * -x README $name
        mv $name ${{ steps.kernel.outputs.kernel-folder }}/out/arch/arm64/boot/
        echo "zipname=$name" >> $GITHUB_OUTPUT
      working-directory: ${{ steps.kernel.outputs.kernel-folder }}
      id: anykernel

    - name: Check the output directory before uploading
      run: |
        ls -al ${{ steps.kernel.outputs.kernel-folder }}/out/arch/arm64/boot/

    - name: Upload to Release
      if: ${{ github.event.inputs.UPLOAD_TO_RELEASE == 'true' }}
      uses: softprops/action-gh-release@v1
      with:
        files: |
          ${{ steps.kernel.outputs.kernel-folder }}/out/arch/arm64/boot/Image.gz-dtb
          ${{ steps.kernel.outputs.kernel-folder }}/out/arch/arm64/boot/Image.gz
          ${{ steps.kernel.outputs.kernel-folder }}/out/arch/arm64/boot/${{ steps.anykernel.outputs.zipname }}
        name: ${{ github.event.inputs.CODENAME }}-${{ github.run_id }}
        tag_name: ${{ github.run_id }}
        body: |
          <b>${{ steps.workspace.outputs.build_title }}</b>
          <b>Kernel successfully built!</b>, took ${{ steps.build.outputs.elapsed_time }} seconds.
          
          <b>Kernel tree</b>: ${{ github.event.inputs.KERNEL_TREE }}/tree/${{ github.event.inputs.KERNEL_TREE_BRANCH }}
          <b>KernelSU</b>: ${{ steps.workspace.outputs.kernelsu }}
          <b>Action</b>: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - uses: actions/upload-artifact@v4
      if: ${{ success() && github.event.inputs.UPLOAD_TO_RELEASE != 'true' }}
      with:
        name: Image.gz-dtb
        path: ${{ steps.kernel.outputs.kernel-folder }}/out/arch/arm64/boot/Image.gz-dtb

    - uses: actions/upload-artifact@v4
      if: ${{ success() && github.event.inputs.UPLOAD_TO_RELEASE != 'true' }}
      with:
        name: Image-dtb
        path: ${{ steps.kernel.outputs.kernel-folder }}/out/arch/arm64/boot/Image-dtb

    - uses: actions/upload-artifact@v4
      if: ${{ success() && github.event.inputs.UPLOAD_TO_RELEASE != 'true' }}
      with:
        name: Image.gz
        path: ${{ steps.kernel.outputs.kernel-folder }}/out/arch/arm64/boot/Image.gz

    - uses: actions/upload-artifact@v4
      if: ${{ success() && github.event.inputs.UPLOAD_TO_RELEASE != 'true' }}
      with:
        name: Image
        path: ${{ steps.kernel.outputs.kernel-folder }}/out/arch/arm64/boot/Image

    - uses: actions/upload-artifact@v4
      if: ${{ success() && github.event.inputs.ANYKERNEL_URL != '' && github.event.inputs.UPLOAD_TO_RELEASE != 'true' }}
      with:
        name: ${{ steps.anykernel.outputs.zipname }}
        path: |
          ${{ steps.kernel.outputs.kernel-folder }}/out/arch/arm64/boot/AnyKernel3/
          !${{ steps.kernel.outputs.kernel-folder }}/out/arch/arm64/boot/AnyKernel3/.git
          !${{ steps.kernel.outputs.kernel-folder }}/out/arch/arm64/boot/AnyKernel3/.github

